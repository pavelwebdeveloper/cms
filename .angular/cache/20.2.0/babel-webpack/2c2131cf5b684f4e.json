{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Message } from '../message.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../message/message.service\";\nconst _c0 = [\"subject\"];\nconst _c1 = [\"msgText\"];\nexport let MessageEditComponent = /*#__PURE__*/(() => {\n  class MessageEditComponent {\n    constructor(messageService) {\n      this.messageService = messageService;\n      this.addMessageEvent = new EventEmitter();\n      this.currentSender = '101';\n    }\n    ngOnInit() {}\n    onSendMessage(event) {\n      event.preventDefault();\n      const messageSubject = this.subjectRef.nativeElement.value;\n      const messageText = this.msgTextRef.nativeElement.value;\n      const newMessage = new Message('5', messageSubject, messageText, this.currentSender);\n      //this.addMessageEvent.emit(newMessage);\n      this.messageService.addMessage(newMessage);\n    }\n    onClear() {\n      this.subjectRef.nativeElement.value = '';\n      this.msgTextRef.nativeElement.value = '';\n    }\n    static {\n      this.ɵfac = function MessageEditComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MessageEditComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: MessageEditComponent,\n        selectors: [[\"cms-message-edit\"]],\n        viewQuery: function MessageEditComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n            i0.ɵɵviewQuery(_c1, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subjectRef = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.msgTextRef = _t.first);\n          }\n        },\n        outputs: {\n          addMessageEvent: \"addMessageEvent\"\n        },\n        decls: 20,\n        vars: 0,\n        consts: [[\"subject\", \"\"], [\"msgText\", \"\"], [1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"document-edit\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"subject\"], [\"type\", \"text\", \"id\", \"subject\", \"size\", \"120\", \"max\", \"120\", 1, \"form-control\"], [\"for\", \"message\"], [\"type\", \"text\", \"id\", \"message\", \"max\", \"255\", \"size\", \"120\", 1, \"form-control\"], [1, \"col-xs-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n        template: function MessageEditComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵdomElementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"form\", 4)(3, \"div\", 5)(4, \"div\", 6)(5, \"label\", 7);\n            i0.ɵɵtext(6, \"Subject\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElement(7, \"input\", 8, 0);\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElementStart(9, \"div\", 6)(10, \"label\", 9);\n            i0.ɵɵtext(11, \"Message\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElement(12, \"input\", 10, 1);\n            i0.ɵɵdomElementEnd()();\n            i0.ɵɵdomElementStart(14, \"div\", 5)(15, \"div\", 11)(16, \"button\", 12);\n            i0.ɵɵdomListener(\"click\", function MessageEditComponent_Template_button_click_16_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onSendMessage($event));\n            });\n            i0.ɵɵtext(17, \"Send\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElementStart(18, \"button\", 13);\n            i0.ɵɵdomListener(\"click\", function MessageEditComponent_Template_button_click_18_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onClear());\n            });\n            i0.ɵɵtext(19, \"Clear\");\n            i0.ɵɵdomElementEnd()()()()()();\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return MessageEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}