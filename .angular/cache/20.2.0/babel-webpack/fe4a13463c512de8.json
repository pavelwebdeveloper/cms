{"ast":null,"code":"import { Contact } from '../contact.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact/contact.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = [\"f\"];\nconst _c1 = () => [\"contactGroup\"];\nfunction ContactEditComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵdomElementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Enter a valid Email address\");\n    i0.ɵɵdomElementEnd();\n  }\n}\nfunction ContactEditComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵdomElementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Enter a valid phone number\");\n    i0.ɵɵdomElementEnd();\n  }\n}\nfunction ContactEditComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵdomElementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Conact cannot be added to the group. It is already in group or is the current contact \");\n    i0.ɵɵdomElementEnd();\n  }\n}\nfunction ContactEditComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵdomElementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵdomElement(2, \"cms-contact-item\", 28);\n    i0.ɵɵdomElementStart(3, \"button\", 29);\n    i0.ɵɵdomListener(\"click\", function ContactEditComponent_div_36_Template_button_click_3_listener() {\n      const i_r4 = i0.ɵɵrestoreView(_r3).index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onRemoveItem(i_r4));\n    });\n    i0.ɵɵtext(4, \"X\");\n    i0.ɵɵdomElementEnd()()();\n  }\n  if (rf & 2) {\n    const contact_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵdomProperty(\"contact\", contact_r6);\n  }\n}\nfunction ContactEditComponent_span_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵdomElementStart(0, \"span\", 30);\n    i0.ɵɵtext(1, \"Drag contacts in group here\");\n    i0.ɵɵdomElementEnd();\n  }\n}\nfunction ContactEditComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵdomElementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"The Name and Email fields are required.\");\n    i0.ɵɵdomElementEnd();\n  }\n}\nexport let ContactEditComponent = /*#__PURE__*/(() => {\n  class ContactEditComponent {\n    constructor(contactService, router, route) {\n      this.contactService = contactService;\n      this.router = router;\n      this.route = route;\n      this.editMode = false;\n      this.invalidGroupContactAdded = false;\n      this.groupContacts = [];\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = params['id'];\n        if (!this.id) {\n          this.editMode = false;\n          console.log(\"EDIT MODE\");\n          console.log(this.editMode);\n          return;\n        }\n        this.originalContact = this.contactService.getContact(this.id);\n        if (!this.originalContact) {\n          return;\n        }\n        this.editMode = true;\n        this.contact = JSON.parse(JSON.stringify(this.originalContact));\n        console.log(this.contact);\n        console.log(\"GROUP\");\n        console.log(this.contact.group);\n        if (this.contact.group) {\n          this.groupContacts = JSON.parse(JSON.stringify(this.originalContact.group));\n          console.log(\"GROUP\");\n          console.log(this.contact.group);\n        }\n      });\n    }\n    onCancel() {\n      this.router.navigate(['/contacts']);\n    }\n    onSubmit(form) {\n      //console.log(form.value);\n      const value = form.value;\n      const newContact = new Contact(value.id, value.name, value.email, value.phone, value.imageUrl, this.groupContacts);\n      if (this.editMode) {\n        this.contactService.updateContact(this.originalContact, newContact);\n      } else {\n        this.contactService.addContact(newContact);\n      }\n      this.router.navigate(['/contacts']);\n    }\n    isInvalidContact(newContact) {\n      if (!newContact) {\n        return true;\n      }\n      if (this.contact && newContact.id === this.contact.id) {\n        return true;\n      }\n      for (let i = 0; i < this.groupContacts.length; i++) {\n        if (newContact.id === this.groupContacts[i].id) {\n          return true;\n        }\n      }\n      return false;\n    }\n    addToGroup($event) {\n      const selectedContact = $event.dragData;\n      const invalidGroupContact = this.isInvalidContact(selectedContact);\n      if (invalidGroupContact) {\n        this.invalidGroupContactAdded = true;\n        return;\n      }\n      this.invalidGroupContactAdded = false;\n      this.groupContacts.push(selectedContact);\n      //this.contactService\n      console.log(\"groupContacts\");\n      console.log(this.groupContacts);\n    }\n    onRemoveItem(index) {\n      if (index < 0 || index >= this.groupContacts.length) {\n        return;\n      }\n      this.groupContacts.splice(index, 1);\n    }\n    static {\n      this.ɵfac = function ContactEditComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ContactEditComponent)(i0.ɵɵdirectiveInject(i1.ContactService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ContactEditComponent,\n        selectors: [[\"cms-contact-edit\"]],\n        viewQuery: function ContactEditComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.saveDocumentForm = _t.first);\n          }\n        },\n        decls: 45,\n        vars: 13,\n        consts: [[\"f\", \"ngForm\"], [\"name\", \"ngModel\"], [\"email\", \"ngModel\"], [\"phone\", \"ngModel\"], [\"imageUrl\", \"ngModel\"], [1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"contact-edit\", 3, \"ngSubmit\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"size\", \"120\", \"max\", \"120\", \"required\", \"\", 1, \"form-control\", \"required\", 3, \"ngModel\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"size\", \"120\", \"max\", \"255\", \"required\", \"\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\", 1, \"form-control\", \"required\", 3, \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"phone\"], [\"type\", \"text\", \"id\", \"phone\", \"name\", \"phone\", \"size\", \"150\", \"max\", \"255\", \"pattern\", \"\\\\D*([2-9]\\\\d{2})(\\\\D*)([2-9]\\\\d{2})(\\\\D*)(\\\\d{4})\\\\D*\", 1, \"form-control\", \"invalid\", 3, \"ngModel\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"name\", \"imageUrl\", \"size\", \"150\", \"max\", \"255\", 1, \"form-control\", 3, \"ngModel\"], [1, \"form-group\"], [\"for\", \"groupList\"], [\"id\", \"groupList\", \"dnd-droppable\", \"\", 1, \"row\", 2, \"min-height\", \"3rem\", 3, \"onDropSuccess\", \"dropZones\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"dragMsg\", 4, \"ngIf\"], [1, \"col-xs-12\", \"btn-toolbar\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"col-sm-11\", 3, \"contact\"], [1, \"btn\", \"btn-danger\", \"col-sm-2\", \"deleteButton\", 3, \"click\"], [1, \"dragMsg\"]],\n        template: function ContactEditComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵdomElementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"form\", 7, 0);\n            i0.ɵɵdomListener(\"ngSubmit\", function ContactEditComponent_Template_form_ngSubmit_2_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const f_r2 = i0.ɵɵreference(3);\n              return i0.ɵɵresetView(ctx.onSubmit(f_r2));\n            });\n            i0.ɵɵdomElementStart(4, \"div\", 8)(5, \"div\", 9)(6, \"label\", 10);\n            i0.ɵɵtext(7, \"Name:\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElement(8, \"input\", 11, 1);\n            i0.ɵɵdomElementEnd()();\n            i0.ɵɵdomElementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 12);\n            i0.ɵɵtext(13, \"Email:\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElement(14, \"input\", 13, 2);\n            i0.ɵɵdomTemplate(16, ContactEditComponent_div_16_Template, 2, 0, \"div\", 14);\n            i0.ɵɵdomElementEnd()();\n            i0.ɵɵdomElementStart(17, \"div\", 8)(18, \"div\", 9)(19, \"label\", 15);\n            i0.ɵɵtext(20, \"Phone:\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElement(21, \"input\", 16, 3);\n            i0.ɵɵdomTemplate(23, ContactEditComponent_div_23_Template, 2, 0, \"div\", 14);\n            i0.ɵɵdomElementEnd()();\n            i0.ɵɵdomElementStart(24, \"div\", 8)(25, \"div\", 9)(26, \"label\", 17);\n            i0.ɵɵtext(27, \"Image URL:\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElement(28, \"input\", 18, 4);\n            i0.ɵɵdomElementEnd()();\n            i0.ɵɵdomElementStart(30, \"div\", 8)(31, \"div\", 19)(32, \"label\", 20);\n            i0.ɵɵtext(33, \"Group Contacts:\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomTemplate(34, ContactEditComponent_div_34_Template, 2, 0, \"div\", 14);\n            i0.ɵɵdomElementStart(35, \"div\", 21);\n            i0.ɵɵdomListener(\"onDropSuccess\", function ContactEditComponent_Template_div_onDropSuccess_35_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.addToGroup($event));\n            });\n            i0.ɵɵdomTemplate(36, ContactEditComponent_div_36_Template, 5, 1, \"div\", 22)(37, ContactEditComponent_span_37_Template, 2, 0, \"span\", 23);\n            i0.ɵɵdomElementEnd()()();\n            i0.ɵɵdomTemplate(38, ContactEditComponent_div_38_Template, 2, 0, \"div\", 14);\n            i0.ɵɵdomElementStart(39, \"div\", 8)(40, \"div\", 24)(41, \"button\", 25);\n            i0.ɵɵtext(42, \"Save\");\n            i0.ɵɵdomElementEnd();\n            i0.ɵɵdomElementStart(43, \"button\", 26);\n            i0.ɵɵdomListener(\"click\", function ContactEditComponent_Template_button_click_43_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onCancel());\n            });\n            i0.ɵɵtext(44, \"Cancel\");\n            i0.ɵɵdomElementEnd()()()()()();\n          }\n          if (rf & 2) {\n            const f_r2 = i0.ɵɵreference(3);\n            const name_r7 = i0.ɵɵreference(9);\n            const email_r8 = i0.ɵɵreference(15);\n            const phone_r9 = i0.ɵɵreference(22);\n            i0.ɵɵadvance(8);\n            i0.ɵɵdomProperty(\"ngModel\", ctx.editMode ? ctx.contact.name : \"\");\n            i0.ɵɵadvance(6);\n            i0.ɵɵdomProperty(\"ngModel\", ctx.editMode ? ctx.contact.email : \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵdomProperty(\"ngIf\", !email_r8.valid && email_r8.touched);\n            i0.ɵɵadvance(5);\n            i0.ɵɵdomProperty(\"ngModel\", ctx.editMode ? ctx.contact.phone : \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵdomProperty(\"ngIf\", !phone_r9.valid && phone_r9.touched);\n            i0.ɵɵadvance(5);\n            i0.ɵɵdomProperty(\"ngModel\", ctx.editMode ? ctx.contact.imageUrl : \"\");\n            i0.ɵɵadvance(6);\n            i0.ɵɵdomProperty(\"ngIf\", ctx.invalidGroupContactAdded);\n            i0.ɵɵadvance();\n            i0.ɵɵdomProperty(\"dropZones\", i0.ɵɵpureFunction0(12, _c1));\n            i0.ɵɵadvance();\n            i0.ɵɵdomProperty(\"ngForOf\", ctx.groupContacts);\n            i0.ɵɵadvance();\n            i0.ɵɵdomProperty(\"ngIf\", (ctx.groupContacts == null ? null : ctx.groupContacts.length) < 1);\n            i0.ɵɵadvance();\n            i0.ɵɵdomProperty(\"ngIf\", !name_r7.valid && name_r7.touched || !email_r8.valid && email_r8.touched);\n            i0.ɵɵadvance(3);\n            i0.ɵɵdomProperty(\"disabled\", !f_r2.valid);\n          }\n        },\n        styles: [\".required.ng-invalid.ng-touched[_ngcontent-%COMP%], .invalid.ng-invalid.ng-dirty[_ngcontent-%COMP%]{border:1px solid red}.pad-left-right[_ngcontent-%COMP%]{padding-left:.1rem}.deleteButton[_ngcontent-%COMP%]{margin-top:1.5rem;margin-left:-1.2rem;width:3.4rem}.buttonDiv[_ngcontent-%COMP%]{margin-top:1.5rem}.groupDiv[_ngcontent-%COMP%]{min-height:6rem;border:solid thin lightgrey}.dragMsg[_ngcontent-%COMP%]{font-size:2rem;color:#a9a9a9;margin-left:3rem}\"]\n      });\n    }\n  }\n  return ContactEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}